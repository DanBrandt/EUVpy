import pytest
from EUVpy.empiricalModels.models.EUVAC import euvac
from EUVpy.tools import processIndices
from scipy.integrate import simpson
import numpy as np
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
# Helper function:
def isclose(a, b, rel_tol=1e-09, abs_tol=0.0):
    # https://stackoverflow.com/questions/5595425/how-to-compare-floats-for-almost-equality-in-python
    return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
def test_config():
    # Get some F10.7 for the entirety of a given month in 2018:
    f107times, f107, f107a, f107b = processIndices.getCLSF107('2018-01-01', '2018-12-31',
                                                              truncate=False)

    # Generate irradiances:
    euvacFlux, euvacIrr, _, _, _ = euvac.euvac(f107, f107a)
    integrals = [0.10379344516749053, 0.02410571345971727, 0.1712772086387486, 0.07998792238709215,
                 0.012580925133214743, 0.00015516408709509446, 0.03235042770036426, 0.014254983099576256,
                 0.15831464276461657, 0.016594529073694735, 0.01189302277028755, 0.003827209789508359,
                 0.006015860898648758, 0.004157529924701224, 0.0034497496907782686, 0.00566336961831251,
                 0.009058653751995618, 0.01486217460436766, 0.004312866480688313, 0.005251835490865095,
                 0.017599943595856173, 0.0034792465219936008, 0.0023519758950516223, 0.003578217452826545,
                 0.0013356337796516726, 0.0015402854701843003, 0.0021212289636781886, 0.0062023395831176595,
                 0.006715795844138774, 0.013517639430700999, 0.02749074073106703, 0.02221869743226283,
                 0.031191256700535224, 0.010425906268916697, 0.023327130260760564, 0.013897617381618065,
                 0.016594398236997394]
    all_ints = np.zeros_like(integrals)
    for i in range(euvacIrr.shape[1]):
        all_ints[i] = simpson(euvacIrr[:, i])
        assert (isclose(all_ints[i], integrals[i], rel_tol=1e-10))