import pytest
from EUVpy.empiricalModels.models.HEUVAC import heuvac
from EUVpy.tools import processIndices
from scipy.integrate import simpson
import numpy as np
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
# Helper function:
def isclose(a, b, rel_tol=1e-09, abs_tol=0.0):
    # https://stackoverflow.com/questions/5595425/how-to-compare-floats-for-almost-equality-in-python
    return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
def test_config():
    # Get some F10.7 for the entirety of a given month in 2018:
    f107times, f107, f107a, f107b = processIndices.getCLSF107('2018-01-01', '2018-12-31',
                                                              truncate=False)

    # Generate irradiances:
    heuvac_wav, heuvacFlux, heuvacIrr, _, _, _ = heuvac.heuvac(f107, f107a, torr=True)
    integrals = [0.10336139943364923, 0.024057077683532567, 0.16903216435907445, 0.08215586919237809,
                 0.012300769408825343, 0.004264735786266104, 0.035444935968385397, 0.015372518834820777,
                 0.15831581571799877, 0.020331772506109028, 0.011893723363758572, 0.0048407301803690805,
                 0.006007947070068781, 0.0041576363313664344, 0.0034289401087413064, 0.005661824737641795,
                 0.009059362807734568, 0.014862620561315027, 0.004330785921801228, 0.005253342347395704,
                 0.017600201133759617, 0.003480351139720542, 0.0023328820146357016, 0.0035783476881324433,
                 0.0013373118833702614, 0.0015815153444054028, 0.0021214866679186224, 0.006302996613739029,
                 0.006724858269746514, 0.013399239455088571, 0.026818002835173122, 0.023107841466680663,
                 0.03124315138678056, 0.010325172045726307, 0.02332761488765317, 0.014027674095518163,
                 0.01635280989524162]
    all_ints = np.zeros_like(integrals)
    for i in range(heuvacIrr.shape[1]):
        all_ints[i] = simpson(heuvacIrr[:, i])
        assert (isclose(all_ints[i], integrals[i], rel_tol=1e-10))