import pytest
import numpy as np
from EUVpy.NEUVAC import neuvac
from EUVpy.tools import processIndices
from scipy.integrate import simpson
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
# Helper function:
def isclose(a, b, rel_tol=1e-09, abs_tol=0.0):
    # https://stackoverflow.com/questions/5595425/how-to-compare-floats-for-almost-equality-in-python
    return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
def test_config():
    # Get some F10.7 for the entirety of a given month in 2018:
    f107times, f107, f107a, f107b = processIndices.getCLSF107('2018-01-01', '2018-12-31',
                                                              truncate=False)

    # Generate irradiances in the EUVAC bands (validate them):
    neuvacIrr, _, _, _ = neuvac.neuvacEUV(f107, f107b, bands='EUVAC')
    integrals = [0.05246648908572817, 0.023497427718739458, 0.13806354412432875, 0.07631886793016032,
                 0.016723701365305498, 0.0051957608462539235, 0.028292161459003737, 0.1577763106130986,
                 0.0009930146094422707, 0.037566784591576495, 0.01443216526079433, 0.02049586310530997,
                 0.01269908762484041, 0.005469908401913766, 0.0139109311371798, 0.013797460183869877,
                 0.008512049943612458, 0.01654861207416694, 0.006648913079692914, 0.007203248069337905,
                 0.018754505395893087, 0.005027181893561718, 0.005594639014209394, 0.0038743017631303685,
                 0.006275032969400698, 0.0041669621899827845, 0.004683215512056784, 0.004835992522933198,
                 0.01782572798660837, 0.03361503371757845, 0.05419734192300687, 0.04450112093103549,
                 0.04615363618215064, 0.017159618520822418, 0.026531640122067855, 0.019221480713113928,
                 0.022672198761951815]
    all_ints = np.zeros_like(integrals)
    for i in range(neuvacIrr.shape[1]):
        all_ints[i] = simpson(neuvacIrr[:, i])
        assert(isclose(all_ints[i], integrals[i], rel_tol=1e-15))

    # Do the same as the above with the other wavelength bands...
    # GITM Bins:
    neuvacIrrG, _, _, _ = neuvac.neuvacEUV(f107, f107b)
    integralsG = [1.412879794249836e-08, 3.1199999570141964e-07, 2.4066144680260996e-05, 0.0010666457441363862,
                  0.00398535965062494, 0.0016673955443464751, 0.007451166665452293, 0.052466489085728284,
                  0.023497427718748957, 0.1380635441243306, 0.07631886793011437, 0.01672370136531487,
                  0.005195760846251022, 0.02829216145899742, 0.15777631061309338, 0.0009930146094323967,
                  0.0375667845915679, 0.014432165260807438, 0.020495863105291, 0.012699087624855979,
                  0.00546990840192328, 0.01391093113715945, 0.013797460183878304, 0.00851204994363211,
                  0.01654861207415755, 0.006648913079676788, 0.007203248069337626, 0.01875450539590338,
                  0.005027181893561494, 0.005594639014204456, 0.0038743017631241708, 0.006275032969406596,
                  0.004166962189997148, 0.004683215512082059, 0.00483599252293054, 0.017825727986616045,
                  0.03361503371757096, 0.054197341923018685, 0.044501120931025415, 0.046153636182131724,
                  0.017159618520823112, 0.026531640122060083, 0.01922148071310506, 0.02267219876198347,
                  0.015636123441639616, 0.02199917843915142, 0.07449773602393987, 2.1994479443527535,
                  0.17269755624170677, 0.04208376422846108, 0.1353277582313461, 0.07174182768283584,
                  0.08470512635260748, 0.12160531007568029, 0.20762895254634, 0.30128375750067493, 0.42699881055655764,
                  0.7785980284947499, 1.28607158321003]
    all_ints_g = np.zeros_like(integralsG)
    for j in range(neuvacIrrG.shape[1]):
        all_ints_g[j] = simpson(neuvacIrrG[:, j])
        assert(isclose(all_ints_g[j], integralsG[i], rel_tol=1e-15))
    # SOLOMON BINS:
    neuvacIrrS, _, _, _ = neuvac.neuvacEUV(f107, f107b, bands='SOLOMON')
    integralsS = [1.6935758143414008e-06, 5.544630274168647e-05, 0.003042412172338911, 0.005021881235438574,
                  0.03270128277532949, 0.055042898679938335, 0.17316487863717625, 0.0845651080462384,
                  0.17853189581021828, 0.09990683685784472, 0.06434459634063053, 0.030509591968097705,
                  0.01831609055850603, 0.02091625877679118, 0.06388575644883379, 0.03118436173499344,
                  0.006013884912058943, 0.014393305651270482, 0.011262229858749534, 0.047203904935167754,
                  0.03938890482609539, 0.04486567394621251]
    all_ints_s = np.zeros_like(integralsS)
    for l in range(neuvacIrrS.shape[1]):
        all_ints_s[l] = simpson(neuvacIrrS[:, l])
        assert (isclose(all_ints_s[l], integralsS[l], rel_tol=1e-15))

    assert True

